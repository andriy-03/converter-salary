{"ast":null,"code":"var _jsxFileName = \"/Users/user/live-matches/converter-salary/src/components/CardDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ConvertRow from \"./ConvertRow\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardDetails(_ref) {\n  _s();\n  let {\n    summPerMoth,\n    currency\n  } = _ref;\n  // Set state\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(summPerMoth);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = (amount * exchangeRate).toFixed(2);\n  } else {\n    toAmount = amount;\n    fromAmount = (amount / exchangeRate).toFixed(2);\n  }\n  useEffect(() => {\n    axios('https://v6.exchangerate-api.com/v6/5ea172a401547858895c2c7a/latest/CAD').then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.conversion_rates)[0];\n      setCurrencyOptions([...Object.keys(data.conversion_rates)]);\n      setFromCurrency(currency);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.conversion_rates[firstCurrency]);\n    });\n  }, []);\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      axios(`https://v6.exchangerate-api.com/v6/5ea172a401547858895c2c7a/latest/${fromCurrency}`).then(res => res.json()).then(data => setExchangeRate(data.conversion_rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\xA0Here you can convert currency and see your earnings in different currency.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), \"\\xA0Your earnings per month is setted for convert (by default)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: [/*#__PURE__*/_jsxDEV(ConvertRow, {\n          currencyOptions: currencyOptions,\n          selectedCurrency: fromCurrency,\n          onChangeCurrency: e => setFromCurrency(e.target.value),\n          onChangeAmount: handleFromAmountChange,\n          amount: fromAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"equal\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ConvertRow, {\n          currencyOptions: currencyOptions,\n          selectedCurrency: toCurrency,\n          onChangeCurrency: e => setToCurrency(e.target.value),\n          onChangeAmount: handleToAmountChange,\n          amount: toAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CardDetails, \"UZhsEPkYHRm+Yqp3mniBgxwNsYQ=\");\n_c = CardDetails;\nexport default CardDetails;\nvar _c;\n$RefreshReg$(_c, \"CardDetails\");","map":{"version":3,"names":["React","useState","useEffect","ConvertRow","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CardDetails","_ref","_s","summPerMoth","currency","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","toAmount","fromAmount","toFixed","then","res","json","data","firstCurrency","Object","keys","conversion_rates","handleFromAmountChange","e","target","value","handleToAmountChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selectedCurrency","onChangeCurrency","onChangeAmount","_c","$RefreshReg$"],"sources":["/Users/user/live-matches/converter-salary/src/components/CardDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ConvertRow from \"./ConvertRow\";\nimport axios from \"axios\";\n\nfunction CardDetails({ summPerMoth, currency }) {\n  \n\n  // Set state\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(summPerMoth)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = (amount * exchangeRate).toFixed(2)\n  } else {\n    toAmount = amount\n    fromAmount = (amount / exchangeRate).toFixed(2)\n  }\n\n  useEffect(() => {\n    axios('https://v6.exchangerate-api.com/v6/5ea172a401547858895c2c7a/latest/CAD')\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.conversion_rates)[0]\n        setCurrencyOptions([...Object.keys(data.conversion_rates)])\n        setFromCurrency(currency)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.conversion_rates[firstCurrency])\n      })\n  }, [])\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      axios(`https://v6.exchangerate-api.com/v6/5ea172a401547858895c2c7a/latest/${fromCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.conversion_rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <>\n      <div className=\"split right\">\n        <div className=\"header\">\n          <h1>Converter</h1>\n      <h2>&nbsp;Here you can convert currency and see your earnings in different currency.\n        <br />\n        <br />\n        &nbsp;Your earnings per month is setted for convert (by default)\n      </h2>\n      </div>\n        <div className=\"centered\">\n      <ConvertRow\n      currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount} \n        />\n        <div className=\"equal\">\n        <h1>&#61;</h1>\n        </div>\n        <ConvertRow \n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        onChangeAmount={handleToAmountChange}\n        amount={toAmount}\n        />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CardDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}